Problem Link 
https://leetcode.com/problems/search-in-rotated-sorted-array/
https://www.interviewbit.com/problems/rotated-sorted-array-search/

Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.
You are given a target value to search. If found in the array return its index, otherwise return -1.
You may assume no duplicate exists in the array.

Code:
Solution 1:First find the pivot then perform binary search.in one of the parts v[mid]<v[high] will always hold true.

int Solution::search(const vector<int> &v, int x) 
{
    int n=v.size();
    int low=0,high=n-1;
    while(low<=high)
    {
        if(low==high)
            break;
        int mid=(low+high)/2;
        if(v[mid]<v[high])
            high=mid-1;
        else low=mid+1;
    }
    int off=low;
    low=0,high=n-1;
    while(low<=high)
    {
        int mid=(low+high)/2;
        if(v[(mid+off)%n]==x)
            return (mid+off)%n;
        if(v[(mid+off)%n]<x)
            low=mid+1;
        else high=mid-1;
    }
    return -1;
}
