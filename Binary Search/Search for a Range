Problem Link
https://www.interviewbit.com/problems/search-for-a-range/
https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/

Description:
Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.
Your algorithm's runtime complexity must be in the order of O(log n).If the target is not found in the array, return [-1, -1].

Code:

vector<int> Solution::searchRange(const vector<int> &v, int val) 
{
    int n=v.size();
    int start=-1,end=-1;
    int low=0,high=n-1;
    bool found=0;
    while(low<=high)
    {
        int mid=(low+high)/2;
        if(v[mid]<val)
            low=mid+1;
        else if(v[mid]>=val)
        {
            if(v[mid]==val)
                found=1;
            high=mid-1;
        }
    }
    if(!found)
        return{-1,-1};
    start=low;
    low=0,high=n-1;
    while(low<=high)
    {
        int mid=(low+high)/2;
        if(v[mid]>val)
            high=mid-1;
        else if(v[mid]<=val)
            low=mid+1;
    }
     end=high;
    return {start,high};
}
