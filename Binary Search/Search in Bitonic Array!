Problem Link 
https://www.interviewbit.com/problems/search-in-bitonic-array/
Description:

Given a bitonic sequence A of N distinct elements, write a program to find a given element B in the bitonic sequence in O(logN) time.
NOTE:A Bitonic Sequence is a sequence of numbers which is first strictly increasing then after a point strictly decreasing.

Code:
Solution 1: O(3*lg N)

int Solution::solve(vector<int> &v, int x) 
{
    int n=v.size();
    int pivot=-1;
    int low=0,high=n-1;
    while(low<=high)
    {
        int mid=(low+high)/2;
        if(v[mid]==x) 
            return mid;
        if(mid>0 && v[mid-1]>v[mid])
            high=mid-1;
        else if(mid<n-1 &&v[mid]<v[mid+1])
            low=mid+1;
        else if(mid>0 && v[mid-1]<v[mid])
            low=mid+1;
        else if(mid<n-1 && v[mid]>v[mid+1])
            high=mid-1;
    }
    pivot=low;
    low=0,high=pivot;
    while(low<=high)//increasing array
    {
        int mid=(high+low)/2;
        if(v[mid]==x)
            return mid;
        if(v[mid]<x)
            low=mid+1;
        else high=mid-1;
    }
    low=pivot+1,high=n-1;
    while(low<=high)//decreasing array
    {
        int mid=(low+high)/2;
        if(v[mid]==x)
            return mid;
        if(v[mid]>x)
            low=mid+1;
        else high=mid-1;
    }
    return -1;
}
Solution 2: O(2*lg N)
https://stackoverflow.com/questions/19372930/given-a-bitonic-array-and-element-x-in-the-array-find-the-index-of-x-in-2logn
