Problem Link:https://www.interviewbit.com/problems/merge-intervals/

Given a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).
You may assume that the intervals were initially sorted according to their start times.

Code
Solution:
static bool cmp(Interval &a,Interval &b)
{
    if(a.start!=b.start) return a.start<b.start;
    return a.end<b.end;
}
vector<Interval> Solution::insert(vector<Interval> &v, Interval newInterval) 
{
    if(newInterval.start>newInterval.end)
        swap(newInterval.start,newInterval.end);
   v.push_back(newInterval);
   sort(v.begin(),v.end(),cmp);
   for(auto itr=v.begin();itr!=v.end();)
   {
    auto ptr=itr;
    int st=(*ptr).start,ed=(*ptr).end;
    while(itr!=v.end()&&(*itr).start<=ed)
    {
        ed=max(ed,(*itr).end);
        itr++;
    }
    (*ptr).end=ed;
    ptr++;
    if(itr!=ptr)
        itr=v.erase(ptr,itr);
   }
   return v; 
}
