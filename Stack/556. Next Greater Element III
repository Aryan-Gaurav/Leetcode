Problem Link:
https://leetcode.com/problems/next-greater-element-iii/

Description:
Given a positive 32-bit integer n, you need to find the smallest 32-bit integer which has exactly the same digits existing in the integer n and is greater in value than n. If no such positive 32-bit integer exists, you need to return -1.

Example 1:

Input: 12
Output: 21
 

Example 2:

Input: 21
Output: -1


Code:
Solution 1:
Same as implementing next permutation.
class Solution {
public:
    int nextGreaterElement(int n) 
    {
        string s=to_string(n);
        int sz=s.size();
        int pivot=-1;
        for(int i=sz-1;i>0;i--)
        {
            if(s[i-1]<s[i])
            {
                pivot=i-1;
                break;
            }
        }
        if(pivot==-1)
            return -1;
        for(int i=sz-1;i>=0;i--)
        {
            if(s[pivot]<s[i])
            {
                swap(s[pivot],s[i]);
                reverse(s.begin()+pivot+1,s.end());
                long long ans= stoull(s);
                if(ans>INT_MAX)
                    return -1;
                return ans;
            }
        }
        return -1;
    }
};
