Problem Link:
https://leetcode.com/problems/path-sum/

Description:
Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.

Note: A leaf is a node with no children.

Example:

Given the below binary tree and sum = 22,

      5
     / \
    4   8
   /   / \
  11  13  4
 /  \      \
7    2      1
return true, as there exist a root-to-leaf path 5->4->11->2 which sum is 22.

Code:
Solution 1:

class Solution {
public:
    bool check(TreeNode *root ,int tar )
    {
        if(root==NULL)
            return 0;
        if(root->left==NULL and root->right==NULL)
            return tar==root->val;
        return check(root->left,tar-root->val) or check(root->right,tar-root->val);
    }
    bool hasPathSum(TreeNode* root, int sum) 
    {
        return check(root,sum);
    }
};
