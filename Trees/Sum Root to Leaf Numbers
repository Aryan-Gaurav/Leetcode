Problem Link:
https://www.interviewbit.com/problems/sum-root-to-leaf-numbers/

Description:
Given a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number.

An example is the root-to-leaf path 1->2->3 which represents the number 123.

Find the total sum of all root-to-leaf numbers % 1003.

Example :

    1
   / \
  2   3
The root-to-leaf path 1->2 represents the number 12.
The root-to-leaf path 1->3 represents the number 13.

Return the sum = (12 + 13) % 1003 = 25 % 1003 = 25.

Code:
Solution 1:
Construct the number from root and end when a leaf node is encountered.

 int ans;
 const int mod=1003;
 void help(TreeNode *root,int currsum)
 {
     if(root==NULL)
     return;
     currsum=(currsum*10+root->val)%mod;
     if(root->left==NULL and root->right==NULL)
     ans=(ans+currsum)%mod;
     help(root->left,currsum);
     help(root->right,currsum);
 }
int Solution::sumNumbers(TreeNode* root) 
{
    ans=0;
   help(root,0);
   return ans;
}
