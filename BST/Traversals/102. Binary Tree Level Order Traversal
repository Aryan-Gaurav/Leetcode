Problem Link:
https://leetcode.com/problems/binary-tree-level-order-traversal/

Description:
Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its level order traversal as:
[
  [3],
  [9,20],
  [15,7]
]

Code:
Solution 1:
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) 
    {
        queue<pair<TreeNode*,int>> q;
        q.push({root,0});
        vector<vector<int>> ans;
        vector<int> temp;
        int level=0;
        while(!q.empty())
        {
            auto t=q.front();
            q.pop();
            if(t.second!=level)
                level=t.second,ans.push_back(temp),temp.clear();
            if(t.first!=NULL)
            {
                temp.push_back(t.first->val);
                q.push({t.first->left,t.second+1});
                q.push({t.first->right,t.second+1});
            }
        }
        return ans;
    }
};
